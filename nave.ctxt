#BlueJ class context
comment0.target=Nave
comment0.text=\r\n\ Esta\ es\ la\ superclase\ que\ manejar\u00E1\ a\ las\ clases\ relacionadas\ con\ naves.\r\n\ \r\n\ @author\ (Team\ Naves)\ \r\n\ @version\ (Domingo,\ 17\ de\ mayo\ -\ Lunes,\ 18\ de\ mayo\ de\ 2020)\r\n
comment1.params=
comment1.target=Nave()
comment1.text=NO\ NECESITAMOS\ coordX\ ni\ coordY\ porque\ ya\ est\u00E1n\ getX()\ y\ getY()
comment2.params=tipoDisparo\ dise\u00F1oNave
comment2.target=Nave(int,\ int)
comment3.params=
comment3.target=void\ act()
comment4.params=direccion
comment4.target=void\ setDireccion(int)
comment4.text=Clase\ que\ cambia\ la\ direcci\u00F3n\ dependiendo\ del\ par\u00E1metro\ que\ reciba.\ Adem\u00E1s\ aqu\u00ED\ mismo\ se\ ejecuta\ el\ movimiento.
comment5.params=
comment5.target=int\ getCordX()
comment5.text=M\u00E9todo\ abstracto\ que\ ser\u00E1\ definido\ en\ las\ subclases\ regresando\ sus\ propios\ puntos\ de\ salud.\r\n\ \ \ \ \ \ \ Estos\ tendr\u00E1n\ que\ ser\ distintos\ porque\ los\ necesitamos\ manejar\ como\ est\u00E1ticos,\r\n\ \ \ \ \ \ \ \ y\ si\ son\ est\u00E1ticos\ generales,\ estos\ valdr\u00E1n\ lo\ mismo\ en\ todas\ las\ instancias.\r\n\ \ \ \ \ \ \ \ -\ Necesitaba\ que\ fuera\ est\u00E1tico,\ pero\ eso\ no\ se\ puede,\ por\ lo\ que\ lo\ implementar\u00E9\ a\ cada\r\nclase\ por\ separado\ aunque\ sea\ un\ mal\ dise\u00F1o.
comment6.params=
comment6.target=int\ getCordY()
numComments=7
