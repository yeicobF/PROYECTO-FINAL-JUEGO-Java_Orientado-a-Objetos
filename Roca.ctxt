#BlueJ class context
comment0.target=Roca
comment0.text=\r\n\ Clase\ que\ maneja\ todo\ lo\ relacionado\ a\ los\ meteoros.\r\n\r\n\ @author\ (Team\ Naves)\r\n\ @version\ (Jueves,\ 4\ de\ junio\ de\ 2020)\r\n
comment1.params=
comment1.target=Roca()
comment1.text=\ Constructor\ inicial\ para\ establecer\ el\ m\u00E1ximo\ de\ rocas\ a\ crear.\r\n\ \ \ \ \ \ \ No\ son\ necesarios\ los\ par\u00E1metros,\ ya\ que\ al\ ser\ los\ valores\ est\u00E1ticos,\ los\ puedo\ establecer\r\naunque\ no\ se\ instancie\ la\ clase.
comment10.params=tRegeneracion
comment10.target=void\ setTiempoRegeneracion(long)
comment11.params=
comment11.target=int\ getNumRocasMax()
comment12.params=
comment12.target=int\ getCoordX()
comment13.params=
comment13.target=int\ getCoordY()
comment2.params=tipoMeteoro
comment2.target=Roca(int)
comment2.text=Constructor\ para\ crear\ las\ rocas\ como\ tal\ para\ el\ mundo
comment3.params=
comment3.target=void\ act()
comment4.params=numRocas\ mundoActual
comment4.target=void\ crearRocas(int,\ greenfoot.World)
comment4.text=M\u00E9todo\ para\ crear\ los\ meteoros\ en\ una\ posici\u00F3n\ random\ con\ un\ sprite\ random.
comment5.params=mundoActual
comment5.target=void\ crearRocasTiempo(greenfoot.World)
comment5.text=\ M\u00E9todo\ que\ crear\u00E1\ nuevas\ rocas\ si\ se\ han\ destruido\ y\ si\ ha\ pasado\ cierto\ tiempo.\ \r\nRegresa\ el\ tiempo\ por\ si\ este\ cambia\ para\ verificar\ si\ pas\u00F3\ el\ l\u00EDmite\ de\ tiempo
comment6.params=
comment6.target=int\ getNumRocasActual()
comment6.text=M\u00E9todo\ para\ obtener\ el\ n\u00FAmero\ actual\ de\ rocas.\ Es\ est\u00E1tico\ porque\ su\ implementaci\u00F3n\ tambi\u00E9n\ lo\ es.
comment7.params=numRocasActual
comment7.target=void\ setNumRocasActual(int)
comment7.text=Setter\ est\u00E1tico\ para\ ser\ accedido\ sin\ instanciar\ y\ cambiar\ el\ n\u00FAmero\ actual\ de\ rocas.
comment8.params=nRocasMax
comment8.target=void\ setNumRocasMax(int)
comment9.params=
comment9.target=long\ getTiempoRegeneracion()
numComments=14
