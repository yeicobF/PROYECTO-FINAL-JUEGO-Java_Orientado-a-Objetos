#BlueJ class context
comment0.target=ArrayListJugador
comment0.text=\r\n\ Clase\ que\ manejar\u00E1\ un\ arrayList\ de\ Jugador\ y\ lo\ podr\u00E1\ ordenar\ dependiendo\ de\ los\ puntos.\r\n\ -\ https\://beginnersbook.com/2013/12/java-arraylist-of-object-sort-example-comparable-and-comparator/\r\n\ \r\n\ @author\ (Jacob)\ \r\n\ @version\ (Viernes,\ 19\ de\ junio\ de\ 2020)\r\n
comment1.params=
comment1.target=ArrayListJugador()
comment2.params=nombre\ puntos\ nivel\ fecha
comment2.target=void\ addJugador(java.lang.String,\ int,\ int,\ java.lang.String)
comment2.text=M\u00E9todo\ para\ agregar\ a\ un\ jugador\ al\ arrayList.
comment3.params=
comment3.target=void\ ordenarArrayList()
comment3.text=M\u00E9todo\ para\ ordenar\ el\ arrayList\ dependiendo\ de\ los\ puntos\ del\ jugador.
comment4.params=
comment4.target=java.lang.String\ guardarEnCadena()
comment4.text=M\u00E9todo\ que\ guardar\u00E1\ el\ arrayList\ en\ una\ cadena\ para\ luego\ escribirla\ en\ el\ archivo.
comment5.params=nombreIngresado
comment5.target=boolean\ isNombreMarcadores(java.lang.String)
comment5.text=M\u00E9todo\ que\ verificar\u00E1\ si\ el\ nombre\ ingresado\ ya\ existe\ en\ los\ marcadores\ o\ no.
comment6.params=
comment6.target=void\ imprimirArrayList()
comment6.text=M\u00E9todo\ para\ ver\ que\ el\ nombre\ ingresado\ por\ el\ usuario\ no\ est\u00E9\ repetido.
numComments=7
