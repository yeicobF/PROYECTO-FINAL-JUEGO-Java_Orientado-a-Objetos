#BlueJ class context
comment0.target=NaveAliada
comment0.text=\r\n\ Esta\ es\ una\ subclase\ de\ la\ superclase\ Nave\ que\ tiene\ como\ funci\u00F3n\ manejar\ las\ naves\ que\ controlar\u00E1\ el\ jugador.\r\n\r\n\ @author\ (Team\ Naves)\r\n\ @version\ (Domingo,\ 17\ de\ mayo\ -\ Lunes,\ 18\ de\ mayo\ de\ 2020)\r\n
comment1.params=tipoDisparo\ dise\u00F1oNave
comment1.target=NaveAliada(int,\ int)
comment10.params=
comment10.target=int\ getCordYDisparo()
comment10.text=M\u00E9todo\ para\ obtener\ la\ Coordenada\ en\ Y\ del\ disparo.\ Verificamos\ que\ el\ disparo\ exista\ y\ si\ no,\ deolver\ un\ valor\ no\ alcanzable.
comment2.params=
comment2.target=void\ act()
comment2.text=Clase\ para\ el\ movimiento\ manual\ de\ la\ nave.\ La\ diferimos\ del\ Movimiento\ de\ la\ nave\ enemiga\ porque\r\nesa\ se\ mover\u00E1\ con\ numeros\ generados\ de\ manera\ aleatoria.\ Si\ la\ podemos\ hacer\ m\u00E1s\ general,\ lo\ haremos.
comment3.params=
comment3.target=void\ movimiento()
comment3.text=M\u00E9todo\ que\ controlar\u00E1\ el\ movimiento\ de\ nuestra\ nave.
comment4.params=
comment4.target=void\ disparar()
comment4.text=M\u00E9todo\ que\ tendr\u00E1\ el\ control\ de\ los\ disparos\ del\ jugador.
comment5.params=
comment5.target=int\ choqueItem()
comment5.text=M\u00E9todo\ que\ determinar\u00E1\ si\ chocamos\ con\ un\ item\ y\ le\ dar\u00E1\ su\ habilidad\ o\ efecto\ a\ la\ nave.\r\n\ \ \ \ \ \ \ \ Regresar\u00E1\ el\ tipo\ del\ item\ que\ servir\u00E1\ para\ condicionar\ los\ m\u00E9todos\ que\ se\ ejectutan\ en\ act().\r\nPor\ ejemplo\ con\ el\ escudo,\ no\ se\ bajar\u00E1\ la\ salud\ de\ la\ nave.
comment6.params=da\u00F1o
comment6.target=void\ morirChoque(int)
comment6.text=M\u00E9todo\ que\ baja\ una\ vida\ al\ jugador\ si\ choca\ con\ una\ roca,\ con\ una\ nave\ enemiga\ o\ con\ un\ disparo\ enemigo\ (a\u00FAn\ no\ implementado).
comment7.params=
comment7.target=void\ perder()
comment8.params=
comment8.target=int\ getVidasJugador()
comment8.text=M\u00E9todo\ para\ obtener\ las\ vidas\ actuales\ del\ jugador.
comment9.params=
comment9.target=int\ getCordXDisparo()
comment9.text=M\u00E9todo\ para\ obtener\ la\ Coordenada\ en\ X\ del\ disparo.\ Pero\ para\ esto\ hay\ que\ verificar\ que\ el\ disparo\ exista.\r\nSi\ el\ disparo\ no\ existe,\ entonces\ devolver\ -1\ en\ x\ porque\ no\ se\ puede\ acceder\ a\ esa\ coordenada.
numComments=11
